/*
 * BSM6.0
 *
 * Copyright 2012-2013 (C) SINODATA CO., LTD. All Rights Reserved.
 */
package com.takin.emmet.algo.first;

/**
 * 区域动态规划
 * 
 *
 * @since 
 * @see     
 */
public class Dp2 {

    /**
     * 石子合并问题：
     * 圆形操场的四周有n堆石子，现要将石子有次序的合并在一堆，每次只能选相邻的石子合并成一堆，并将新的一堆石子记为此次合并的得分.
     * 求一个算法：求最大最小得分
     * 如输入4 5 5 9 输出为43  54 
     * 分析：证明为什么此题不可以用贪心算法求解   http://blog.csdn.net/hqd_acm/article/details/5311603
     * 分析它的一个递归公式：
     * @param data
     */
    public static void stoneMerge(int[] data) {

    }

    /**
     * 加分二叉树问题：
     * n个节点的二叉树中序遍历为(1,2,3....n),其中1,2,3...n为节点编号，每个节点都有一个分数(正整数),第i个节点的分数为di,
     * tree及它的每个子树都有一个加分，任一棵子树subtree(包含tree本身)的加公计算方法如下：
     * 左子树的加分+右子树的加分+根的分数
     * 若某个子树为空，规定其加分为1，叶子的加分就是叶节点本身的分数，不考虑它的空子树
     * 求一棵符合中序遍历为(1,2,3...n)且加分最高的二叉树
     * 要求输出树的最高加分   树的前序遍历
     * @param data
     */
    public static void bstscore(int[] data) {

    }

    /**
     * http://blog.sina.com.cn/s/blog_51cea4040100g88w.html
     * 统计单词个数问题：
     * 给出一个长度不超过200的由小写英文字母组成的字母串(约定以每行20个字母的方式输出，且保证每行一定20个)。要求将此字母串转成k份(1<k<=40)，
     * 且每份中包含的单词个数加起来总数最大(每份中包含的单词可以部分重叠,当选用一个单词之后，其第一个字母不能再用，如字符串this中可以包含
     * this和is,选用this之后就不能包含th),单词在给出的一个不超过6个单词的字典中。要求输出最大的个数。
     * 
     * @param str
     */
    public static void statiscword(String str) {

    }

    /**
     * 炮兵部阵问题：
     * 将军们打算在N*M的网格上部署他们的炮兵部队，一个N*M的地图由N行M列组成，地图上的每一格可能是山地H，也可能是平原P，在每一个平原地形是最多
     * 可以布置一支炮兵部队(山地上不可以),一支炮后部队在地图上的攻击范围如图中黑色区域所示：上下左右各两个，其余部分均攻击不到，炮后的攻击范围
     * 不受地形的影响。现在将写们规划如何部署炮兵部队，在防止误伤的前提下，在整个地图上最多可以摆放多少我军的部队。
     * @param data
     */
    public static void Pao2(int[][] data) {

    }

}
